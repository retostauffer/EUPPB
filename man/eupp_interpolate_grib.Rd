% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gridded.R
\name{eupp_interpolate_grib}
\alias{eupp_interpolate_grib}
\title{Interpolate GRIB File}
\usage{
eupp_interpolate_grib(
  file,
  at,
  atname = NULL,
  bilinear = TRUE,
  wide = TRUE,
  ...
)
}
\arguments{
\item{file}{character, name of the grib file from which
the data should be extracted.}

\item{at}{object of class \code{sf} or \code{sfc} containing
point locations to be extracted/interpolated.}

\item{atname}{\code{NULL} (default) or character length \code{1}.
Is set (and the variable exists in \code{at}) it will be
appended to the returned object.}

\item{bilinear}{logical, defaults to \code{TRUE}. If set to
\code{FALSE} nearest neighbour interpolation is used.}

\item{wide}{logical, defaults to \code{TRUE}. If \code{TRUE} the
result is in a wide format, else long format.}

\item{...}{currently unused.}
}
\description{
Allows to extract and interpolate specific locations
from grib files (see \code{\link{eupp_get_gridded}}).
Requires ecCodes to be installed.
}
\details{
The function will call \code{grib_ls -j} on the grib
file to extract the grib inventory, thus requiring ecCodes
to be installed.

It then reads the grib file using \code{\link[stars]{read_stars}}
to read the data (in bands) and performs the interpolation using
\code{\link[stars]{st_extract}}.

Please note that \code{at} needs a valid coordinate reference
system (CRS) and must only contain \code{POINT} geometries for now.
}
\author{
Reto Stauffer
}
